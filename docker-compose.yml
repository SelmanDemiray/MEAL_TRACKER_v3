version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: mealprep-postgres
    environment:
      POSTGRES_DB: mealprep
      POSTGRES_USER: mealprep
      POSTGRES_PASSWORD: mealprep_secure_2024
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/migrations:/docker-entrypoint-initdb.d
    ports:
      - "35432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mealprep -d mealprep"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: mealprep-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "36379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Gateway Service
  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile
    container_name: mealprep-api-gateway
    environment:
      DATABASE_URL: postgresql://mealprep:mealprep_secure_2024@postgres:5432/mealprep
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRATION: 3600
      CORS_ORIGINS: http://localhost:3000,http://localhost:39000
      NUTRITION_SERVICE_URL: http://nutrition-service:8081
      ANALYTICS_SERVICE_URL: http://analytics-service:8082
      RECIPE_IMPORT_SERVICE_URL: http://recipe-import-service:8083
      RUST_LOG: debug
    ports:
      - "38080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nutrition Service
  nutrition-service:
    build:
      context: ./services/nutrition-service
      dockerfile: Dockerfile
    container_name: mealprep-nutrition-service
    environment:
      DATABASE_URL: postgresql://mealprep:mealprep_secure_2024@postgres:5432/mealprep
      REDIS_URL: redis://redis:6379
      AI_MODEL_PATH: /app/models
      RUST_LOG: debug
    ports:
      - "38081:8081"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Analytics Service
  analytics-service:
    build:
      context: ./services/analytics-service
      dockerfile: Dockerfile
    container_name: mealprep-analytics-service
    environment:
      DATABASE_URL: postgresql://mealprep:mealprep_secure_2024@postgres:5432/mealprep
      REDIS_URL: redis://redis:6379
      RUST_LOG: debug
    ports:
      - "38082:8082"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Recipe Import Service
  recipe-import-service:
    build:
      context: ./services/recipe-import-service
      dockerfile: Dockerfile
    container_name: mealprep-recipe-import-service
    environment:
      DATABASE_URL: postgresql://mealprep:mealprep_secure_2024@postgres:5432/mealprep
      RUST_LOG: debug
    ports:
      - "38083:8083"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend (React)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: mealprep-frontend
    ports:
      - "39000:3000"
    depends_on:
      - api-gateway
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Monitoring - Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: mealprep-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "39090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus

volumes:
  postgres_data:
  redis_data:
  prometheus_data:

networks:
  default:
    name: mealprep-network
